{
    "contents" : "---\ntitle: \"Reproducible Research: Peer Assessment 1\"\nauthor: \"Ahmed Tadde\"\ndate: \"June 9, 2015\"\noutput: html_document\nkeep_md: true\n---\n\n\n\n## Loading and preprocessing the data\nThe packages data.table and dplyr will be loaded and used to perform this task.\n\n```{r,tidy=T}\nlibrary(data.table) \nlibrary(dplyr)\nlibrary(lattice)\n\n```\n\n```{r,tidy=T}\n\nData <- fread(\"activity.csv\", \n              sep = \",\" , \n              na.strings = \"NA\", \n              header = T \n              \n             )\n\nData ; str(Data); summary(Data)\n\n```\n\nThe data is a tidy data. The one (apparent) issue is the number of NA values for the step variable (This will be dealt with later on). \n\nFor convenience we will coerce the \"date\" and \"interval\" identifier variables to factor variables  ( this can be undone if need be later on). In addition, we can rename the \"interval\" variable as \"interval.ID\".\n\n```{r,tidy=T}\n\nData$date <- as.factor(Data$date)\nData$interval <- as.factor(Data$interval)\nData <- Data%>%rename(interval.ID= interval)\n```\n\n\n## What is mean total number of steps taken per day?\n\nWe can get the total number of steps taken per day like this:\n\n```{r,tidy=T}\nsteps.per.day <- Data[, \n                      .(sum.of.steps = sum(steps, na.rm = T)),\n                      by = .(Date=date)\n                     ]\nsteps.per.day\n```\n\nNow, let's see the distribution of the total number of steps taken each day:\n\n```{r,tidy=T}\n\nsteps.per.day[, \n              hist(sum.of.steps, \n                   breaks =10,\n                   main =\"Distribution of the total number of steps taken each day\",\n                   xlab = \"Total Number of Steps Taken per Day\",\n                   ylab =\" Steps\"\n                   )\n             ]\n```\n\nAnd, finally, we get the mean and median of the total number of steps taken per day:\n\n```{r,tidy=T}\n \nreport <- steps.per.day[, .(Mean = mean(sum.of.steps), Median = median(sum.of.steps))]\nreport\n\n```\n\n## What is the average daily activity pattern?\n\nFirst, (1) we can find the average number of steps taken for each 5-minute interval accross all the days. Then, (2) we plot the time series relating each 5-minute interval to its average number of steps taken (accross all days):\n\n```{r,tidy=T}\n\nxy.table <- Data[,\n                  .(number.of.steps = mean(steps, na.rm =T)) , \n                  by = .(interval.ID = interval.ID)\n                ]\n\nxy.table\n\n\nwith(xy.table, \n     \n     plot(\n          interval.ID,\n          number.of.steps,\n          xlab =\"Interval ID\",\n          ylab =\"Number of Steps Taken\", \n          main =\"Daily Activity Pattern\",\n          axes=FALSE\n          )\n     )\n\n\naxis(side=2, at=seq(0, 225, by=50))\nwith(xy.table, lines(interval.ID, number.of.steps, type = \"l\", col = \"red\"))\n\n```\n\n*Note: The x-axis (and its 288 labels) is purposely made invisible for better viewing.*\n\nWhich 5-minute interval, on average across all the days in the dataset, contains the maximum number of steps?\n\n```{r,tidy=T}\nData$interval.ID[with(xy.table,  which.max(number.of.steps))]\n```\n\nSo, the interval with ID:835 is the answer. Specifically this corresponds to the elapsed time between 8:30 am and 8:35 am.\n\n\n## Imputing missing values\n\nCalculating the total number of missing values in the dataset (i.e. the total number of rows with NAs):\n\n```{r,tidy=T}\nnrow(Data%>%filter(is.na(steps)))\n```\n\n\nA method of replacing the NA values is to, first, (1) find the average number of steps taken for each 5-minute interval accross all days. Then, (2) we calculate the median of those averages and use it to replace the NA values. \n\n \n```{r,tidy=T}\n#(1) is already done and the results are saved in the xy.table object made in the previous section\n\n#(2)\nreplacement.value <- xy.table%>%summarise(Median = median(number.of.steps))\nreplacement.value\n```\n\nNow, let's see what we get:\n\n```{r,tidy=T}\nnew.Data <- Data\nnew.Data$steps[with(new.Data, is.na(steps))] = trunc(replacement.value$Median)\n\nsteps.per.day <- new.Data%>%group_by(date)%>%summarise(sum.of.steps = sum(steps))\nsteps.per.day\n```\n\nthe distribution of the total number of steps taken each day:\n\n```{r,tidy=T}\n\nsteps.per.day[, \n              hist(sum.of.steps, \n                   breaks =10,\n                   main =\"Distribution of the total number of steps taken each day\",\n                   xlab = \"Total Number of Steps Taken per Day\",\n                   ylab =\" Steps\"\n                   )\n             ]\n```\n\nAnd, finally, we get the mean and median of the total number of steps taken per day:\n\n```{r,tidy=T}\n \nreport <- steps.per.day[, .(Mean = mean(sum.of.steps), Median = median(sum.of.steps))]\nreport\n\n```\n\nWe do get a diferent value for the Mean after imputing the NA values. But this new value is not greatly different (in maginitude) from the Mean calculated without imputation. The Median stay the same. These two different data sets should not, in principle, give widely different results when used to perform the same analysis. \n\n\n## Are there differences in activity patterns between weekdays and weekends?\n\n\n```{r,tidy=T}\n#Creating the new factor variable is.Weekday\nData <- Data%>%mutate(\n                      Days= as.factor(weekdays(as.Date(date, \"%Y-%m-%d\"))),\n                      is.Weekday = !(as.character(Days) %in% c(\"Saturday\",\"Sunday\"))\n                      )\n\n# a dummy vector to contain either weekday or weekend.\ndummy <- rep(\"weekday\", nrow(Data));\ndummy[Data$is.Weekday == FALSE] = \"weekend\"\n# Converting is.Weekday's TRUE/FALSE values to weekday/weekend values\nData$is.Weekday <- as.factor(dummy)\n\nData\n\nxy.table <- Data[,\n                  .(number.of.steps = mean(steps, na.rm =T)) , \n                  by = .(interval.ID = interval.ID , is.Weekday = is.Weekday)\n                ]\n\nxy.table\n \nxyplot(number.of.steps~interval.ID | is.Weekday, \n       data=xy.table,\n       main=\"Activity Patterns on Weekdays and Weekends\", \n       xlab=\"Interval ID\",  \n       ylab=\"Number of Steps Taken\",\n       layout=c(1,2),\n       type=c(\"l\",\"l\"),\n       scales = list(\n                      #just to get rid of the interval ID cluster on the x-axis\n                      x = list(at= levels(Data$interval.ID)[seq(1,288,47)]), \n                      # the y-axis labelling\n                      y = list(at=seq(0, 250, 50))\n                     )\n       \n       )\n```\n\nBased on this graphs, one can speculate that *this person is more active(on his/her feet) on weekends compared to weekdays (!)*. To support this claim, we can (1) find and compare the mean number of steps taken on weekdays and weekends respectively. (2) For each type of days (weekdays or weekends), we can compare the number of 5-minute intervals during which 100 or more steps are taken in average. The results from these two calculations should be enough to prove our claim.\n\n```{r,tidy=T}\n\n#(1)\nMeans <- xy.table[, .(Mean = mean(number.of.steps)), by=is.Weekday ]; Means\n\n#(2)\nAbove.100.steps.weekdays <- filter(xy.table, \n                                   as.character(is.Weekday) == \"weekday\" & number.of.steps> 100\n                                   );\nAbove.100.steps.weekends <- filter(xy.table, \n                                   as.character(is.Weekday) == \"weekend\" & number.of.steps> 100\n                                   );\nDay.Type <- c(\"Weekday\", \"Weekend\")\nMore.than.100.steps <- c(nrow(Above.100.steps.weekdays), nrow(Above.100.steps.weekends))\n\nreport <- data.frame(Day.Type, More.than.100.steps)\nreport\n\n```\n\nResults for (1) and (2) serve as evidence to support the fact that this person is more active on weekends.\n",
    "created" : 1434143354068.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3448094917",
    "id" : "C37EF506",
    "lastKnownWriteTime" : 1434143607,
    "path" : "~/Documents/FOLDERS & FILES/Github/datasciencecoursera/Reproducible Research/PeerAssignment-1/RepData_PeerAssessment1/PA1_template.Rmd",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_markdown"
}